{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMvGNaTfSeR4aGf47B0EFV2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Python Basics Question"],"metadata":{"id":"GM0AO4DEkXOq"}},{"cell_type":"markdown","source":["1.What is python,and why is it popular?\n"," - python is a high level,easy to learn programming language used for web developement, data science and more.\n"," -Popular because easy to understand for beggener's,and powerfull libraries for data ai web etc.\n"," -can be easily run in any platform.like:-windows,mac,linux etc.\n"," - A big community-lots of support.\n"," 2.What is interpreter in python?\n","  - An interpreter in python is a program that reads and runs your code one line at a time.it doesn't convert the whole code at once like a compiler.instead,it checks lines, translates it and immediately.this helps in quickly finding errors and testing small parts of the code.\n","  3.What are pre defined keywords in Python?\n","  - Pre-defiend keyword in python are special reserved words that have specific meanings and uses in the language.These keywords are part of python syntax and cannot be used as variable names,functions names or identifiers.Ex-include if,else while,for,def,class,and import.They help python understand the structure and flow of your code.\n","  4.Can keywords be used as variable names?\n","  - No keywors cannot be used as variable names in python,Since keywords have special meanings in the language(like if,while,def,),using them as variable names will cause a syntax error.\n","  5.What is mutability in python?\n","  - Mutability in python means whether you can change the value of something after creating it.\n","  If something is mutable,like a list,you can change it later (add,remove itmes).\n","  If it's immutable,like a string or number,you can't change it-if you try,python makes a new one instead.\n","  6.Why are lists mutable,but tuples are immutable?\n","  - Lists are mutable because they're made to store and change data easily-we can add,remove,or change items inside them.python allows this because lists are often used when data needs to be updated.\n","  7.What is difference between \"==\" and \"is\" operators in python?\n","  - In Python:\n","  == checks if two values are equal(it compares the actual data inside).\n","  Examples:5==5 is true.\n","  is checks if two variables point to the same objects in memory.\n","  So,==checks value,is checks value,is checks identity.\n","  8.What are logical operators in Python?\n","  - Logical operators in python are used to combine multiple conditions or expressions.they return either True or False based on the logical operators:\n","  and -Returns True if both conditions are true.\n","  Examples:5 > 2 and 3 < 4 :- True\n","  or-Returns True if both conditions are true.\n","  Exampes:5 > 10 or 3 < 4 :-True\n","  not- Reverses the results. Examples: not True - False\n","  They are used mostly in if statements and decision-making.\n","  9.What is type casting in Python?\n","  - Type casting in Python means changing a value from one data type to another,like turning a number.it helps when you're workiing with diffrent kinds of data and need them to match.\n","  There are two types:\n","  Implicit casting,which Python does on its own during calculations.\n","  Explicit casting,where you manually change the type using functions like int(),flot(), str(),or bool().\n","  Type casting is important for avoiding errors and making sure your data behaves the way you want in a program.\n","  10.What is different between implicit and explicit type casting?\n","  - Implicit and explicit type casting are two ways change data types in python:\n","  -Implicit type casting is done automatically by Python. it happens when Python safely converts one type to another during operations(like converting an int to a float).\n","  - Explicit type casting is done manually by the programmer using functions like int(), float(),or str().\n","  Hance, implicit = Python's choice,explicit = your choice.\n","  11.What is the purpose of conditional statements in python?\n","  - The purpose of conditional statements in Python is to allow your program to make decisions and take different actions based on specific conditions.\n"," - They help your code responds to different situations instead of just running straight from top to bottom. for examples , if a user enters a certain input,the program can decide what to do next - like showing a message, running a calculations, or stopping the program.\n","  - Python uses keywords like if elif(else if),and else to create these conditions is true or false and then execute the related block of code.\n"," - Without conditional statements, all programs would behave the same way every time,no matter the input or situations.with them, your programs become dynamic,smart,and interactive- just like real-world decision making.\n","  12.How does the elif statements work?\n","  - The elif statements in python means \"else if\".it is used when you want to check multiple conditions one after another.\n","   Here's how it works:-\n","\n","  First,Python checks the if condition.\n","\n","   If is true, it runs that block and skips everything else.\n","\n","   if is false, it checks the elif conditions.\n","\n","   if elif is true it runs that block.\n","\n","   If none of the if or elif conditions are true,then the else block(if present)runs.\n","\n","So,elif helps you add more choices to your decision-making in code.\n","\n","13.What is different between for and while loops?\n","  - The difference between for and whille loops in Python is in how they repeat code:\n","\n","  A for loop is used when you know in advance how many times you want to run the loops.it goes through a sequence(like a list or range) one time at a time.\n","\n","  A for loop is used when you know in advance how many times to repeat something.\n","  - It keeps running as long as a condition is true.\n","\n","  In shorts:for = repeat a set number of times while = repeat until a condition becomes false.\n","\n","  14.Describe a scenario where a while loop is more suitable than a for loop.\n","  - A while loop is more suitable when you don't know beforehand howmany times the loop should run - you just want it to keep going until a condition changes.\n","\n","  Examples scenario:you are asking a user to enter the correct password. you don't know how many tries thet'll need, so you keep asking until they enter the right one.in this case,a while loop is perfect because it runs as long as the entered password is wrong, and stops only when the conditions becomes false(i.e, the correct password is entered).\n","\n","\n","\n","  \n","\n","  "],"metadata":{"id":"MZrnASsGlmtu"}},{"cell_type":"markdown","source":["# Python Practical Questions\n","1.Write a Python program to print \"Hello\",World!\""],"metadata":{"id":"NQLNGOLY9udS"}},{"cell_type":"code","source":["print('hello world')"],"metadata":{"id":"Zq7y9870-8d3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1752600333462,"user_tz":-330,"elapsed":54,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"7de5eff9-9798-4db4-c663-b105ce42e24d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hello world\n"]}]},{"cell_type":"markdown","source":["2.Write a python program that displays your name and age."],"metadata":{"id":"kA5V7GdE_TlT"}},{"cell_type":"code","source":["name='Mrs. Janhvi Pareek'\n","age='23'"],"metadata":{"id":"9dzhBEit_gPr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["name"],"metadata":{"id":"u5OPQI9YAHVK","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1752600351870,"user_tz":-330,"elapsed":66,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"4bc0aefa-4ebc-488b-c13f-976def7dd83b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Mrs. Janhvi Pareek'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["age"],"metadata":{"id":"0YpItsZ_AL74","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1752600355187,"user_tz":-330,"elapsed":17,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"4ceb8456-4936-4299-e428-5a5a1bd6d114"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'23'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["3.Write code to print all the pre-defined keywords in Python using the keywords library."],"metadata":{"id":"v5ECYnCAAX1V"}},{"cell_type":"code","source":["print(\"keywords in python are\")\n","import keyword\n","print(keyword.kwlist)"],"metadata":{"id":"Zr4b5_i0A4qw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1752600360141,"user_tz":-330,"elapsed":26,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"e9ee4960-01a0-4753-b7a1-800dd2f8d445"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["keywords in python are\n","['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n"]}]},{"cell_type":"markdown","source":["4.Write a prpgram that checks if a given word is a Python keyword."],"metadata":{"id":"xEMdpCSOCN4G"}},{"cell_type":"code","source":["import keyword\n","word = input(\"Enter a word: \")\n","\n","if keyword.iskeyword(word):\n","  print(f\"'{word}' is a Python keyword.\")\n","else:\n","    print(f\"'{word}' is not a Python keyword.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4kpAd6vXH0k7","executionInfo":{"status":"ok","timestamp":1752601325046,"user_tz":-330,"elapsed":170529,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"a8274faa-a5a8-4ef7-f317-94b8017bd217"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a word: true\n","'true' is not a Python keyword.\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UWvpaWkkK_yv","executionInfo":{"status":"ok","timestamp":1752601519316,"user_tz":-330,"elapsed":72291,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"fdc2e06f-500e-4a13-d364-e24bb7a8b73b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["5.Create a list and tuple in python,and demonstrate how attempting to change an element works differently for each.\n","# List:-"],"metadata":{"id":"L-BWLW8GMWGU"}},{"cell_type":"code","source":["my_list = [10, 20, 30]\n","my_list[1] = 99"],"metadata":{"id":"L5jgDbNlNOg0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Tuple"],"metadata":{"id":"sjQ8u2GVNvu8"}},{"cell_type":"code","source":["my_tuple = (10, 20, 30)\n","my_tuple[1] = 99"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":158},"id":"YPYZm-fYN2AY","executionInfo":{"status":"error","timestamp":1752602045924,"user_tz":-330,"elapsed":164,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"f32a8afd-a231-4e57-f10f-7cef99aa958b"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'tuple' object does not support item assignment","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-24-2735106615.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmy_tuple\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m99\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}]},{"cell_type":"markdown","source":["# Explanation\n","Lists are mutable,so you can change,add,or remove items.\n","\n","Tuples are immutable,so trying to change any item will result in a TypeError.\n","\n","If you run the code above,the list will update successfully,but the tuple will give an error like:"],"metadata":{"id":"FqN9CVHdOVAU"}},{"cell_type":"code","source":["my_tuple = (10, 20, 30)\n","my_tuple[1] = 99"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":158},"id":"tpJgc_OSPPwB","executionInfo":{"status":"error","timestamp":1752602390526,"user_tz":-330,"elapsed":46,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"5cb051c7-4db0-4f60-b3c6-c04a9cc7eb25"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'tuple' object does not support item assignment","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-25-2735106615.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmy_tuple\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m99\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}]},{"cell_type":"markdown","source":["6.Write a function to demonstrate the behavior of mutable and immutable arguments.\n","\n","  - In Python, some data types like lists are mutable,which means their values can change inside a function. But others like int or string are immutable,so their values don't change even if we try to modify them in a function.\n","\n","  Here's a small examples to show the difference:"],"metadata":{"id":"7ZOQ7bpkPlyM"}},{"cell_type":"code","source":["def test(a, b):\n","  a += 5\n","  b.append(10)"],"metadata":{"id":"MRfoCj5XQ14E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- If a is an integer like 10,it won't change outside the function.But if b is a list like[1,2,3],it will become[1,2,3,10]after the function.\n"," This shows that integers are immutable(they stay the same),and lists are mutable(they get modified inside the function."],"metadata":{"id":"zn-ShPJcRKQU"}},{"cell_type":"markdown","source":["7.Write a program that performs basic arithmetic operations on two user-input numbers.\n","\n"," * Here is a Python program that takes two numbers from the user and then does addition,subtraction, multiplication,and division:"],"metadata":{"id":"H2vuoAHKJa1u"}},{"cell_type":"code","source":["a = float(input(\"Enter first number: \"))\n","b = float(input(\"Enter second number: \"))\n","\n","print(\"Addition is:\", a + b)\n","print(\"Subtraction is:\", a - b)\n","print(\"Multiplication is:\", a * b)\n","\n","if b != 0:\n","     print(\"Division is:\", a / b)\n","else:\n","    print(\"Cannot divide by zero\")"],"metadata":{"id":"KYYiD6knTpLY","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1752683325479,"user_tz":-330,"elapsed":25231,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"f32b146e-c099-4496-8036-c3038526ea62"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter first number: 7\n","Enter second number: 2\n","Addition is: 9.0\n","Subtraction is: 5.0\n","Multiplication is: 14.0\n","Division is: 3.5\n"]}]},{"cell_type":"markdown","source":["# Explanation\n"," I took two numbers from the user.\n","\n"," then i printed the result of all four operations.\n","\n"," For division,I added a check to make sure we don't divided by zero."],"metadata":{"id":"Eb-W5ilgEV1d"}},{"cell_type":"markdown","source":["8.Write a program to demonstrate the use of logical operators."],"metadata":{"id":"4lHR8mcfJFGS"}},{"cell_type":"code","source":["a = 10\n","b = 5\n","c = 15\n","\n","# using and operstors\n","print(\"a > b and a < c:\", a > b and a < c)\n","\n","# using or operator\n","print(\"a < b or a < c:\", a < b or a < c)\n","# using not operator\n","print(\"not(a > b):\", not(a > b))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"dxZJ28rDFZ6m","executionInfo":{"status":"ok","timestamp":1752684407384,"user_tz":-330,"elapsed":54,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"8d24e401-6f99-4600-d518-4f8789265afa"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["a > b and a < c: True\n","a < b or a < c: True\n","not(a > b): False\n"]}]},{"cell_type":"markdown","source":["# Because\n","and gives True only if both conditions are true.\n","\n","or gives True if at least one condition is true.\n","\n","not reverse the result-- if it's True , it becomes False."],"metadata":{"id":"kpP-O0eNLZnJ"}},{"cell_type":"markdown","source":["9.Write a Python program to convert user input from string to integer,float,and boolean types."],"metadata":{"id":"aR7auk6wMGB8"}},{"cell_type":"code","source":["# Taking input fom the user\n","user_input = input(\"Enter something: \")\n","\n","# Converting to integer\n","try:\n","  int_value = int(user_input)\n","  print(\"Integer value:\", int_value)\n","except:\n","    print(\"Cannot convert to integer.\")\n","\n","# Converting to float\n","try:\n","    float_value = float(user_input)\n","    print(\"Float value:\" , float_value)\n","except:\n","    print(\"Cannot convert to float.\")\n","\n","# Converting to boolean\n","bool_value = bool(user_input)\n","print(\"Boolean value:\" , bool_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LVNcc74tMbGK","executionInfo":{"status":"ok","timestamp":1752687490440,"user_tz":-330,"elapsed":14185,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"a76e71ef-038f-4f33-a247-7383c3aa0698"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter something: 26\n","Integer value: 26\n","Float value: 26.0\n","Boolean value: True\n"]}]},{"cell_type":"markdown","source":["10.Write code to demonstrate type casting with list elements."],"metadata":{"id":"q34eDiBlUOpu"}},{"cell_type":"code","source":["my_list = [\"10\", \"20\", \"30\"]\n","\n","int_list = [int(x) for x in my_list]\n","float_list = [float(x) for x in int_list]\n","\n","print(\"Origional list:\", my_list)\n","print(\"As integer:\", int_list)\n","print(\"As floats:\", float_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zj0nTKRmUbl0","executionInfo":{"status":"ok","timestamp":1752688161327,"user_tz":-330,"elapsed":24,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"290e1e10-b0c0-481b-9933-adcb241b0651"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Origional list: ['10', '20', '30']\n","As integer: [10, 20, 30]\n","As floats: [10.0, 20.0, 30.0]\n"]}]},{"cell_type":"markdown","source":["11.Write a program that checks if a number is positive,negative,or zero."],"metadata":{"id":"oNAvPbUuWw35"}},{"cell_type":"code","source":["num = float(input(\"Enter a number: \"))\n","\n","if num > 0:\n","  print(\"The number is positive.\")\n","elif num < 0:\n","  print(\"The number is negative.\")\n","else:\n","  print(\"The number is zero.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JcVSUahuW_nD","executionInfo":{"status":"ok","timestamp":1752688652244,"user_tz":-330,"elapsed":11344,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"fb3e57da-d427-41d8-c9d9-0e0f126a07b3"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 7\n","The number is positive.\n"]}]},{"cell_type":"markdown","source":["12.Write a for loop to print numbers from 1 to 10."],"metadata":{"id":"WyrcaaXUYpqn"}},{"cell_type":"code","source":["for i in range(1, 11):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A0AcHTeqY1b_","executionInfo":{"status":"ok","timestamp":1752688757153,"user_tz":-330,"elapsed":32,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"dacb5ac2-b3db-483d-c908-92ac183ac7d5"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"markdown","source":["13.Write a Python program to find the sum of all even numbers between 1 and 50."],"metadata":{"id":"SZq2Q4-vZBwB"}},{"cell_type":"code","source":["sum = 0\n","\n","for i in range(1, 51):\n","  if i % 2 == 0:\n","    sum = sum + i\n","\n","    print(\"Sum of even numbers from 1 to 50 is:\", sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"feCWnLM-ZSVH","executionInfo":{"status":"ok","timestamp":1752689011797,"user_tz":-330,"elapsed":39,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"30efbae4-2daa-44e4-c3ab-dd1ff345ee38"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum of even numbers from 1 to 50 is: 2\n","Sum of even numbers from 1 to 50 is: 6\n","Sum of even numbers from 1 to 50 is: 12\n","Sum of even numbers from 1 to 50 is: 20\n","Sum of even numbers from 1 to 50 is: 30\n","Sum of even numbers from 1 to 50 is: 42\n","Sum of even numbers from 1 to 50 is: 56\n","Sum of even numbers from 1 to 50 is: 72\n","Sum of even numbers from 1 to 50 is: 90\n","Sum of even numbers from 1 to 50 is: 110\n","Sum of even numbers from 1 to 50 is: 132\n","Sum of even numbers from 1 to 50 is: 156\n","Sum of even numbers from 1 to 50 is: 182\n","Sum of even numbers from 1 to 50 is: 210\n","Sum of even numbers from 1 to 50 is: 240\n","Sum of even numbers from 1 to 50 is: 272\n","Sum of even numbers from 1 to 50 is: 306\n","Sum of even numbers from 1 to 50 is: 342\n","Sum of even numbers from 1 to 50 is: 380\n","Sum of even numbers from 1 to 50 is: 420\n","Sum of even numbers from 1 to 50 is: 462\n","Sum of even numbers from 1 to 50 is: 506\n","Sum of even numbers from 1 to 50 is: 552\n","Sum of even numbers from 1 to 50 is: 600\n","Sum of even numbers from 1 to 50 is: 650\n"]}]},{"cell_type":"markdown","source":["14.Write a program to reverse from astring using a while loop."],"metadata":{"id":"I3AGxa-SaIcB"}},{"cell_type":"code","source":["text = input(\"Enter a word: \")\n","i = -1\n","reverse = \"\"\n","\n","while i >= -len(text):\n","  reverse = reverse + text[i]\n","  i = i - 1\n","\n","  print(\"Reversed word is:\", reverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vFZwk3lQaUxT","executionInfo":{"status":"ok","timestamp":1752689369135,"user_tz":-330,"elapsed":35426,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"d968cb2f-9d8b-486d-9d80-96848c1e4b88"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a word: janhvi\n","Reversed word is: i\n","Reversed word is: iv\n","Reversed word is: ivh\n","Reversed word is: ivhn\n","Reversed word is: ivhna\n","Reversed word is: ivhnaj\n"]}]},{"cell_type":"code","source":["print('Reserved word is',reverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LxasVZTEbaln","executionInfo":{"status":"ok","timestamp":1752689448221,"user_tz":-330,"elapsed":59,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"bf9a8170-3f44-4f8e-c958-9cb041204d46"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Reserved word is ivhnaj\n"]}]},{"cell_type":"markdown","source":["15.Weite a python program to calculate the factorial of a number provided by the user using a while loop."],"metadata":{"id":"JB0iNJ0nbtGi"}},{"cell_type":"code","source":["num = int(input(\"Enter a number: \"))\n","fact = 1\n","i = 1\n","\n","while i <= num:\n","  fact = fact * i\n","  i = i + 1\n","\n","  print(\"Factorial is:\", fact)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8TzQGG0ScCx5","executionInfo":{"status":"ok","timestamp":1752689998257,"user_tz":-330,"elapsed":4193,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"003eb00a-bdf8-4042-d928-2b75b1fed1da"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 22\n","Factorial is: 1\n","Factorial is: 2\n","Factorial is: 6\n","Factorial is: 24\n","Factorial is: 120\n","Factorial is: 720\n","Factorial is: 5040\n","Factorial is: 40320\n","Factorial is: 362880\n","Factorial is: 3628800\n","Factorial is: 39916800\n","Factorial is: 479001600\n","Factorial is: 6227020800\n","Factorial is: 87178291200\n","Factorial is: 1307674368000\n","Factorial is: 20922789888000\n","Factorial is: 355687428096000\n","Factorial is: 6402373705728000\n","Factorial is: 121645100408832000\n","Factorial is: 2432902008176640000\n","Factorial is: 51090942171709440000\n","Factorial is: 1124000727777607680000\n"]}]},{"cell_type":"code","source":["print(\"Factorial is\", +fact)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DMa8aoYudzlq","executionInfo":{"status":"ok","timestamp":1752690068878,"user_tz":-330,"elapsed":38,"user":{"displayName":"Janhvi Pareek","userId":"06454510841143298597"}},"outputId":"74bca1e3-ba55-4db5-b66a-1f675a51186c"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Factorial is 1124000727777607680000\n"]}]},{"cell_type":"markdown","source":["# Thank You Sir"],"metadata":{"id":"f7lnN59QeGM6"}}]}